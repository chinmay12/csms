version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    networks:
      - app-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: echo stat | nc localhost 2181
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    networks:
      - app-network
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list
      interval: 10s
      timeout: 5s
      retries: 5

  authentication-service:
    build:
      context: .
      dockerfile: authentication-service/Dockerfile
    networks:
      - app-network
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - ENCRYPTION_PASSWORD=${ENCRYPTION_PASSWORD}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

  transaction-service:
    build:
      context: .
      dockerfile: transaction-service/Dockerfile
    networks:
      - app-network
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./transaction-service/target:/app/target  # Optional: for debugging
    depends_on:
      kafka:
        condition: service_healthy
